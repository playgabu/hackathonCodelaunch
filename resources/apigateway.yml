Resources:
  ApiGatewayRestApi:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: ${self:service}-api-${self:custom.currentStage}
      EndpointConfiguration:
        Types:
          - EDGE
      Policy: ""
  APIGatewayAuthorizer:
    DependsOn:
      - ApiGatewayRestApi
    Type: "AWS::ApiGateway::Authorizer"
    Properties:
      Name: ${self:service}-cognito-authorizer-${self:custom.currentStage}
      IdentitySource: method.request.header.Authorization
      RestApiId:
        Ref: ApiGatewayRestApi
      Type: COGNITO_USER_POOLS
      ProviderARNs:
        - Fn::GetAtt: [CognitoUserPool, Arn]
  APIGatewayCustomAuthorizer:
    DependsOn:
      - ApiGatewayRestApi
    Type: "AWS::ApiGateway::Authorizer"
    Properties:
      AuthorizerCredentials: 
        Fn::GetAtt: [APIGatewayExecutionRoleAuthorizer, Arn]
      AuthorizerResultTtlInSeconds: 0
      Name: ${self:service}-custom-authorizer-${self:custom.currentStage}
      IdentitySource: method.request.header.Authorization
      RestApiId: 
        Ref: ApiGatewayRestApi
      Type: REQUEST
      AuthorizerUri: !Join 
        - ''
        - - 'arn:aws:apigateway:'
          - Ref: 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - Fn::GetAtt: [ApiCustomAuthorizerLambdaFunction, Arn]
          - /invocations

Outputs:
  ApiGatewayRestApiId:
    Value:
      Ref: ApiGatewayRestApi
    Export:
      Name: ${self:custom.currentStage}-ExtApiGatewayRestApiId
  ApiGatewayRestApiRootResourceId:
    Value:
      Fn::GetAtt:
        - ApiGatewayRestApi
        - RootResourceId
    Export:
      Name: ${self:custom.currentStage}-ExtApiGatewayRestApiRootResourceId
  ApiAuthorizerId:
    Value:
      Ref: APIGatewayAuthorizer
    Export:
      Name: ${self:custom.currentStage}-ApiAuthorizerId
  ApiCustomAuthorizerId:
    Value:
      Ref: APIGatewayCustomAuthorizer
    Export:
      Name: ${self:custom.currentStage}-ApiCustomAuthorizerId